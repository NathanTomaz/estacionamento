/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package estacionamento;

import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nathan
 */
public class vagas extends javax.swing.JPanel {
    
       private conectar bd;

       private DefaultTableModel tCli;

    /** Creates new form vagas */
    public vagas(conectar BD) {
        bd = BD;
        initComponents();
        tCli = (DefaultTableModel) vagasTab.getModel();
        preencheTabel();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        guardarBt = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vagasTab = new javax.swing.JTable();
        limparBt = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        descTX = new javax.swing.JTextArea();

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Descrição da vaga:");

        guardarBt.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        guardarBt.setForeground(new java.awt.Color(51, 0, 51));
        guardarBt.setText("Guardar");
        guardarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBtActionPerformed(evt);
            }
        });

        vagasTab.setAutoCreateRowSorter(true);
        vagasTab.setFont(new java.awt.Font("DejaVu Serif", 0, 14)); // NOI18N
        vagasTab.setForeground(java.awt.Color.black);
        vagasTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Descrição", "Deletar", "Alterar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vagasTab.setToolTipText("");
        vagasTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vagasTabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vagasTab);
        if (vagasTab.getColumnModel().getColumnCount() > 0) {
            vagasTab.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        limparBt.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        limparBt.setForeground(new java.awt.Color(51, 0, 51));
        limparBt.setText("Limpar");
        limparBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparBtActionPerformed(evt);
            }
        });

        descTX.setColumns(20);
        descTX.setRows(5);
        jScrollPane2.setViewportView(descTX);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guardarBt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(limparBt, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limparBt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guardarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBtActionPerformed
        int confirma;
        confirma = JOptionPane.showConfirmDialog(null, "Deseja Gravar esses dados?");
        if (confirma == JOptionPane.YES_OPTION) {
            // verifica se o usuário clicou no botão YES
            String desc;
            desc = descTX.getText();
            conectar bb = new conectar();

            try {

                if(idSelect.equals("")){
                    bd.persistir("INSERT INTO vagas(Descricao) "
                        + "VALUES('" + desc +"')");

                    JOptionPane.showMessageDialog(null, "Gravado com sucesso!");
                }else{
                    bd.persistir("update vagas set "
                        + ",Descricao = '" + desc + "' "
                        + "where id = '"+idSelect+"'");
                    JOptionPane.showMessageDialog(null, "Editado com sucesso!");
                }
                preencheTabel();

            } catch (Exception ex) {
                System.out.println(ex.getMessage()+" ERROR");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cancelado!");
        }
    }//GEN-LAST:event_guardarBtActionPerformed

    private void vagasTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vagasTabMouseClicked
        int li = vagasTab.getSelectedRow();
        int col = vagasTab.getSelectedColumn();
        String texto = (String) vagasTab.getValueAt(li, col);
        String id = (String) vagasTab.getValueAt(li, 0);
        //idSelect = "";
        if(texto.equals("            X")){
            excluir(id);
        }else if(texto.equals("            O")){
            editar(id);
        }
        preencheTabel();
    }//GEN-LAST:event_vagasTabMouseClicked

    private void limparBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparBtActionPerformed
        // TODO add your handling code here:
        limpar();
    }//GEN-LAST:event_limparBtActionPerformed
public void excluir(String id){
        bd.persistir("DELETE FROM vagas where id = "+id);
        limpar();
    }
    public void editar(String id){
        ResultSet vagas;
        try{
        vagas =  bd.recupera("SELECT * FROM vagas where id = "+id);
        while(vagas.next()){
            this.idSelect = vagas.getString("id");
            this.descTX.setText(vagas.getString("Descricao"));
        }
            
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }
    
    
    public void preencheTabel() {
        try {
            ResultSet todos = bd.recupera("select * from vagas");
            tCli.setNumRows(0);
            while (todos.next()) {
                String[] Nlinha = {
                    todos.getString("id"),
                    todos.getString("Descricao"),
                    "            X", "            O"
                };
                tCli.addRow(Nlinha);
            }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    public ResultSet busca() {
        return bd.recupera("select * from vagas");
    }
    
    public void limpar() {
        this.idSelect = "";
        this.descTX.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descTX;
    private javax.swing.JToggleButton guardarBt;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton limparBt;
    private javax.swing.JTable vagasTab;
    // End of variables declaration//GEN-END:variables
private String idSelect = "";
}
